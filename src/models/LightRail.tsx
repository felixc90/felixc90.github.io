/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/models/university.glb -o ./src/models/University.tsx -t --shadows 
*/

import * as THREE from 'three'
import React, { useEffect, useRef, useState } from 'react'
import { useGLTF, useScroll } from '@react-three/drei'
import { useFrame } from '@react-three/fiber';



export function Model() {
  const { scene } = useGLTF('models/light-rail.glb');
	const lightRail = useRef<THREE.Object3D>(null);

	useFrame(() => {
		if (lightRail.current) {
			let increment = 0.5;
			if (Math.abs(lightRail.current.position.z) < 0.2) {
				increment = 0.002;
			}
			lightRail.current.position.lerp(new THREE.Vector3(
				lightRail.current.position.x,
				lightRail.current.position.y, 
				lightRail.current.position.z + increment
			), 0.5);
		}
		if (lightRail.current && lightRail.current.position.z > 50) {
			lightRail.current.position.z = -50;
		}
	});
	
	return (
		<primitive
			ref={lightRail}
			object={ scene }
			scale={ 0.05 }
			position={new THREE.Vector3(18,0,0)}
    />
	)
}

useGLTF.preload('models/light-rail.glb')
